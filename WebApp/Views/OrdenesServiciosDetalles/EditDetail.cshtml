@model OrdenesServiciosDetallesModel 
@{
    string Prefix = "OrdenesServiciosDetalles"; 
    string UrlDelete = Url.Action("DeleteDetail", "OrdenesServiciosDetalles", new { Id = Model.Entity.Id }); 

    var toolbarDetailconfig = new ToolbarDetailConfiguration(Prefix).Delete(UrlDelete,Model.Entity.IsNew,true).Save(true).Cancel(); 
} 

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

<div>@(Html.DControls().Toolbar(toolbarDetailconfig))</div>

<div> 
     <form id="@(Prefix)Form" asp-controller="OrdenesServiciosDetalles" asp-action="EditDetail" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#OrdenesServiciosDetallesMainPanelForm" data-ajax-success="@(Prefix)FormSuccessDetail" data-ajax-failure="@(Prefix)FormFailureDetail" data-ajax="true"> 
         @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary")) 
         @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroupDetail")) 
         { 
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

                @(Html.DControls().NumberBoxFor(m => m.Entity.OrdenesServiciosId).ID(Prefix + "OrdenesServiciosId").Visible(false)) 

                @(Html.DControls().Form<OrdenesServiciosDetallesModel>()
                    .ID("OrdenesServiciosDetallesModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>{
                                groupItems.AddSimpleFor(m => m.Entity.CupsId).ColSpan(10)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("OrdenesServiciosDetalles.CupsId")))
                                  .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("OrdenesServiciosDetalles.CupsId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "CupsId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("OrdenesServiciosDetalles").LoadAction("GetCupsId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("DescripcionCompleta").SearchExpr("Codigo", "Descripcion")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );
                                groupItems.AddSimpleFor(m => m.Entity.Cantidad).ColSpan(2)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("OrdenesServiciosDetalles.Cantidad")))
                                     .Editor(e=>e.NumberBox().ID(Prefix + "Cantidad").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                                groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                                      .Editor(e => e.TextArea().ID(Prefix + "Observaciones"));
                            });
                    })
             ) 
         } 
         <div asp-validation-summary="All" class="text-danger" id="@(Prefix)ListError"></div> 
     </form> 
</div> 

