@model LiquidacionHonorariosModel
@{
    string Prefix = "LiquidacionHonorarios";

    string UrlSave = Url.Action("Edit", "LiquidacionHonorarios");
    string UrlNew = Url.Action("New", "LiquidacionHonorarios");
    string UrlDelete = Url.Action("Delete", "LiquidacionHonorarios", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "LiquidacionHonorarios");
   

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("LiquidacionHonorarios"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave) || Model.Entity.EstadosId != 10064, Model.Entity.IsNew)
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete) || Model.Entity.EstadosId != 10064, UrlBack, Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>
        {
                        new ButtonToolbar
                        {
                            Action = $"{Prefix}AnularLiquidacion",
                            Icon = "clear",
                            Text = DApp.DefaultLanguage.GetResource("DEAFULT.Anular"),
                            LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                            Location = ToolbarItemLocation.After,
                            Disabled = Model.Entity.EstadosId != 10062
                        },
                        new ButtonToolbar
                        {
                            Action = $"{Prefix}ImprimirLiquidacionHonorariosId",
                            Text = @DApp.DefaultLanguage.GetResource("DEFAULT.Imprimir"),
                            Disabled = Model.Entity.IsNew,
                            LocateInMenu = ToolbarItemLocateInMenuMode.Auto,    
                            Location = ToolbarItemLocation.After, 
                            Icon = "print" 
                        }
        })
        .Back(UrlBack);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="LiquidacionHonorariosMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="LiquidacionHonorarios" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.Time).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.Time).Visible(false))

                @(Html.DControls().NumberBoxFor(m => m.Entity.EmpresasId).ID(Prefix + "EmpresasId").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.DetalleAnulacion).ID(Prefix + "Entity_DetalleAnulacion").Visible(false))

                @(Html.DControls().Form<LiquidacionHonorariosModel>().ReadOnly(Model.Entity.EstadosId == 10062 || Model.Entity.EstadosId == 10065)
                    .ID("LiquidacionHonorariosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
            items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                .Items(groupItems =>{
                    groupItems.AddSimpleFor(m => m.Entity.Consecutivo).ColSpan(3)
                      .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("LiquidacionHonorarios.Consecutivo")))
                          .Editor(e=>e.NumberBox().ID(Prefix + "Consecutivo").Format("#,##0.##")
                          .ReadOnly(true)
                          );

                    groupItems.AddSimpleFor(m => m.Entity.EstadosId).ColSpan(3)
                       .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("LiquidacionHonorarios.EstadosId")))
                       .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("LiquidacionHonorarios.EstadosId")))
                            .Editor(e => e.SelectBox().ID(Prefix + "EstadosId")
                            .DataSource(d => d.Mvc().LoadMethod("POST").Controller("LiquidacionHonorarios").LoadAction("GetEstadosId").Key("Id"))
                            .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                            .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                            .ReadOnly(true)
                       );

                    groupItems.AddSimpleFor(m => m.Entity.ValorTotal).ColSpan(3)
                      .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("LiquidacionHonorarios.ValorTotal")))
                          .Editor(e => e.NumberBox().ID(Prefix + "ValorTotal").Format("#,##0.##")
                          .ReadOnly(true)
                          );

                    groupItems.AddEmpty().ColSpan(3);

                    groupItems.AddSimpleFor(m => m.Entity.FechaInicio).ColSpan(3)
                      .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("LiquidacionHonorarios.FechaInicio")))
                          .Editor(e=>e.DateBox().ID(Prefix + "FechaInicio").Type(DateBoxType.Date)
                          .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat))
                          .ShowClearButton(true).UseMaskBehavior(true)
                          );
                    groupItems.AddSimpleFor(m => m.Entity.FechaFinal).ColSpan(3)
                      .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("LiquidacionHonorarios.FechaFinal")))
                          .Editor(e=>e.DateBox().ID(Prefix + "FechaFinal").Type(DateBoxType.Date)
                          .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat))
                          .ShowClearButton(true).UseMaskBehavior(true)
                          );

                    groupItems.AddSimpleFor(m => m.Entity.EmpleadosId).ColSpan(6)
                        .Editor(e => e.SelectBox().ID(Prefix + "EmpleadosId")
                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("LiquidacionHonorarios").LoadAction("GetEmpleadosId").Key("Id"))
                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                        .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("NumeroIdentificacion", "NombreCompleto")
                        .SearchEnabled(true).ShowClearButton(true)
                   );

                    groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                     .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2000).Message(DApp.GetStringLengthResource("LiquidacionHonorarios.Observaciones", 2000)))
                          .Editor(e => e.TextArea().ID(Prefix + "Observaciones"));
                });
        })
                )
            }
        </form>

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@

        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#LiquidacionHonorariosDetalle" aria-controls="LiquidacionHonorariosDetalle" role="tab" data-toggle="tab">
                        @DApp.DefaultLanguage.GetResource("LiquidacionHonorariosDetalle")
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="LiquidacionHonorariosDetalle">
                    <partial name="../LiquidacionHonorariosDetalle/ListDetail.cshtml" model=Model view-data="ViewData" />
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.DControls().Popup()
    .ID("PopupAnularLiquidacion").Width(500).Height(210).ShowTitle(true)
    .Title("Detalle").ShowCloseButton(true)
    .Visible(false).DragEnabled(false)
    .ContentTemplate(new TemplateName("TemplateAnularLiquidacion"))
)
@using (Html.DevExtreme().NamedTemplate("TemplateAnularLiquidacion"))
{
    <div class="form-group">
        @(Html.DControls().TextAreaFor(m => m.Entity.DetalleAnulacion).ID(Prefix + "DetalleAnulacion").Placeholder("Detalle de la anulacion").InputAttr("class", "form-control"))
    </div>
    <div class="form-group">
        <button class="btn btn-dark btn-block" onclick="@(Prefix)ConfirmarAnularLiquidacion()">ACEPTAR</button>
    </div>
}
