@model CiclosCajasModel 
@{
    string Prefix = "CiclosCajas"; 

    string UrlSave = Url.Action("Edit", "CiclosCajas"); 
    string UrlNew = Url.Action("New", "CiclosCajas"); 
    string UrlDelete = Url.Action("Delete", "CiclosCajas", new { Id = Model.Entity.Id }); 
    string UrlBack = Url.Action("ListPartial", "CiclosCajas"); 

    var ToolbarConfig = new ToolbarConfiguration(Prefix) 
        .Title(DApp.DefaultLanguage.GetResource("CiclosCajas")) 
        .Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew) 
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew)) 
        .Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew) 
        .Back(UrlBack); 
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

@(Html.DControls().Toolbar(ToolbarConfig)) 

<div> 
    <div id = "CiclosCajasMainPanelForm"> 
        <form id="@(Prefix)Form" asp-controller="CiclosCajas" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

                @(Html.DControls().Form<CiclosCajasModel>().ReadOnly(Model.TieneCaja)
                    .ID("CiclosCajasModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("CiclosCajas.InformacionApertura"))
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.Entity.CajasId).ColSpan(6)
                             .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.CajasId")))
                             .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("CiclosCajas.CajasId")))
                                  .Editor(e => e.SelectBox().ID(Prefix + "CajasId")
                                  .DataSource(d => d.Mvc().LoadMethod("POST").Controller("CiclosCajas").LoadAction("GetCajasId").Key("Id"))
                                  .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                  .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                  .SearchEnabled(true).ShowClearButton(true)
                             );
                            groupItems.AddSimpleFor(m => m.Entity.OpenUsersId).ColSpan(4)
                             .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.OpenUsersId")))
                             .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("CiclosCajas.OpenUsersId")))
                                  .Editor(e => e.SelectBox().Disabled(true).ID(Prefix + "OpenUsersId")
                                  .DataSource(d => d.Mvc().LoadMethod("POST").Controller("CiclosCajas").LoadAction("GetOpenUsersId").Key("Id"))
                                  .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                  .ValueExpr("Id").DisplayExpr("UserName").SearchExpr("UserName")
                                  .SearchEnabled(true).ShowClearButton(true)
                             );

                            groupItems.AddSimple().ColSpan(2).Label(x=>x.Text("Consecutivo"))
                              .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.ValorApertura")))
                                  .Editor(e => e.NumberBox().ID(Prefix + "IdConsecutivo").Value(Model.Entity.Id).Format("#,##0").ReadOnly(true));

                            groupItems.AddSimpleFor(m => m.Entity.ValorApertura).ColSpan(6)
                              .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.ValorApertura")))
                                  .Editor(e => e.NumberBox().ID(Prefix + "ValorApertura").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                            groupItems.AddSimpleFor(m => m.Entity.FechaApertura).ColSpan(6)
                             .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.FechaApertura")))
                                 .Editor(e => e.DateBox().ID(Prefix + "FechaApertura").Disabled(true)
                                 .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                        });
                        items.AddGroup().ColCount(3).Caption(DApp.DefaultLanguage.GetResource("CiclosCajas.InformacionCierre"))
                             .Items(groupItems =>
                             {

                                 groupItems.AddSimpleFor(m => m.Entity.CloseUsersId).ColSpan(6)
                                      .Editor(e => e.SelectBox().ID(Prefix + "CloseUsersId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("CiclosCajas").LoadAction("GetCloseUsersId").Key("Id")
                                        .LoadParams(new { closeUserId = Model.Entity.CloseUsersId }))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("UserName").SearchExpr("UserName")
                                      .SearchEnabled(true).ShowClearButton(true).ReadOnly(Model.Entity.CloseUsersId != null)
                                 );

                                 groupItems.AddSimpleFor(m => m.Entity.ValorCierre).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.ValorCierre")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "ValorCierre").Format("#,##0.##")
                                      .ShowClearButton(true).ShowSpinButtons(true)
                                      .ReadOnly(Model.Entity.IsNew)
                                      );

                                 groupItems.AddSimpleFor(m => m.Entity.FechaCierre).ColSpan(6)
                                      .Editor(e => e.DateBox().ID(Prefix + "FechaCierre").ReadOnly(true)
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)));

                                 //groupItems.AddSimpleFor(m => m.Entity.TotalFaltante).ColSpan(1)
                                 // .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.TotalFaltante")))
                                 //     .Editor(e => e.NumberBox().ID(Prefix + "TotalFaltante").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                                 //groupItems.AddSimpleFor(m => m.Entity.TotalSobrante).ColSpan(1)
                                 // .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.TotalSobrante")))
                                 //     .Editor(e => e.NumberBox().ID(Prefix + "TotalSobrante").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                             });

                        items.AddGroup().ColCount(3).Caption(DApp.DefaultLanguage.GetResource("CiclosCajas.InformacionTotalCierre"))
                             .Items(groupItems =>
                             {

                                 //groupItems.AddSimpleFor(m => m.Entity.CloseUsersId).ColSpan(1)
                                 //     .Editor(e => e.SelectBox().ID(Prefix + "CloseUsersId")
                                 //     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("CiclosCajas").LoadAction("GetCloseUsersId").Key("Id"))
                                 //     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                 //     .ValueExpr("Id").DisplayExpr("UserName").SearchExpr("UserName")
                                 //     .SearchEnabled(true).ShowClearButton(true)
                                 //);

                                 //groupItems.AddSimpleFor(m => m.Entity.ValorCierre).ColSpan(1)
                                 // .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.ValorCierre")))
                                 //     .Editor(e => e.NumberBox().ID(Prefix + "ValorCierre").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                                 //groupItems.AddSimpleFor(m => m.Entity.FechaCierre).ColSpan(1)
                                 //     .Editor(e => e.DateBox().ID(Prefix + "FechaCierre")
                                 //     .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                                 groupItems.AddSimpleFor(m => m.Entity.TotalRecaudos).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.TotalRecaudos")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "TotalRecaudos").ReadOnly(true).Format("#,##0.##"));

                                 groupItems.AddSimpleFor(m => m.Entity.TotalFaltante).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.TotalFaltante")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "TotalFaltante").ReadOnly(true).Format("#,##0.##"));

                                 groupItems.AddSimpleFor(m => m.Entity.TotalSobrante).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("CiclosCajas.TotalSobrante")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "TotalSobrante").ReadOnly(true).Format("#,##0.##"));
                                 
                                 groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(1)
                                                             .Editor(e => e.TextBox().ReadOnly(true));
                                 groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(1)
                                      .Editor(e => e.DateBox().ReadOnly(true)
                                      .Type(DateBoxType.DateTime)
                                      .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                 groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(1)
                                      .Editor(e => e.TextBox().ReadOnly(true));
                                 groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(1)
                                      .Editor(e => e.DateBox().ReadOnly(true)
                                      .Type(DateBoxType.DateTime)
                                      .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                             });


                    })
                )
            }
        </form> 

    </div> 
</div> 

