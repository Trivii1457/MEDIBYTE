@model GlosasModel 
@{
    string Prefix = "Glosas"; 

    string UrlSave = Url.Action("Edit", "Glosas"); 
    string UrlNew = Url.Action("New", "Glosas"); 
    string UrlDelete = Url.Action("Delete", "Glosas", new { Id = Model.Entity.Id }); 
    string UrlBack = Url.Action("ListPartial", "Glosas"); 

    var ToolbarConfig = new ToolbarConfiguration(Prefix) 
        .Title(DApp.DefaultLanguage.GetResource("Glosas")) 
        .Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew) 
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew)) 
        .Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew) 
        .Back(UrlBack); 
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

@(Html.DControls().Toolbar(ToolbarConfig)) 

<div> 
    <div id = "GlosasMainPanelForm"> 
        <form id = "@(Prefix)Form" asp-controller="Glosas" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true"> 
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary")) 
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup")) 
            { 
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false)) 
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false)) 
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false)) 
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false)) 
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false)) 
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false)) 

                @(Html.DControls().Form<GlosasModel>()
                    .ID("GlosasModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(2).Caption(DApp.DefaultLanguage.GetResource("Glosas.Factura"))
                             .Items(groupItems =>
                             {
                                 groupItems.AddSimpleFor(m => m.Entity.FacturasId).ColSpan(1)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Glosas.FacturasId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Glosas.FacturasId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "FacturasId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Glosas").LoadAction("GetFacturasId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr(new JS(Prefix + "DisplayExprFacturaId")).SearchExpr("Documentos.Prefijo", "NroConsecutivo","Saldo")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                             });

                        items.AddGroup().ColCount(2).Caption(DApp.DefaultLanguage.GetResource("Glosas.Glosa"))
                             .Items(groupItems =>{

                                 groupItems.AddSimpleFor(m => m.Entity.CausalesGlosasId).ColSpan(1)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Glosas.CausalesGlosasId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Glosas.CausalesGlosasId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "CausalesGlosasId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Glosas").LoadAction("GetCausalesGlosasId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                 groupItems.AddSimpleFor(m => m.Entity.ValorGlosado).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Glosas.ValorGlosado")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "ValorGlosado").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                             });

                        if (Model.Entity.ValorGlosado > 0)
                        {

                            items.AddGroup().ColCount(2).Caption(DApp.DefaultLanguage.GetResource("Glosas.Conciliacion"))
                                .Items(groupItems =>
                                {

                                    groupItems.AddSimpleFor(m => m.Entity.ValorAceptado).ColSpan(1)
                                     .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Glosas.ValorAceptado")))
                                         .Editor(e => e.NumberBox().ID(Prefix + "ValorAceptado").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                                    groupItems.AddSimpleFor(m => m.Entity.ValorGlosadoFinal).ColSpan(1)
                                     .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Glosas.ValorGlosadoFinal")))
                                         .Editor(e => e.NumberBox().ReadOnly(true).ID(Prefix + "ValorGlosadoFinal").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                                });
                        }
                    })
                ) 
            } 
        </form> 

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@
        @* 
        <div> 
           <ul class="nav nav-tabs" role="tablist"> 
               <li role="presentation" class="active"> 
                   <a href="#MAESTRODETALLE" aria-controls="MAESTRODETALLE" role="tab" data-toggle="tab"> 
                       @DApp.DefaultLanguage.GetResource("MAESTRODETALLE") 
                   </a> 
               </li> 
           </ul> 
           <div class="tab-content"> 
               <div role="tabpanel" class="tab-pane active" id="MAESTRODETALLE">
                   <partial name="../MAESTRODETALLE/ListDetail.cshtml" model=Model view-data="ViewData" />
               </div>
           </div>
        </div>
        *@

    </div> 
</div> 

