@model NotasDetallesModel 
@{
    string Prefix = "NotasDetalles";
    string UrlDelete = Url.Action("DeleteDetail", "NotasDetalles", new { Id = Model.Entity.Id });

    var toolbarDetailconfig = new ToolbarDetailConfiguration(Prefix)
        .Delete(UrlDelete)
        .Cancel();

    if (Model.Entity.IsNew)
    {
        toolbarDetailconfig.Save();
    }

} 

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

<div>@(Html.DControls().Toolbar(toolbarDetailconfig))</div>

<div> 
     <form id="@(Prefix)Form" asp-controller="NotasDetalles" asp-action="EditDetail" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#NotasDetallesMainPanelForm" data-ajax-success="@(Prefix)FormSuccessDetail" data-ajax-failure="@(Prefix)FormFailureDetail" data-ajax="true"> 
         @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary")) 
         @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroupDetail")) 
         { 
             @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false)) 
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false)) 
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false)) 
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false)) 
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false)) 
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false)) 
                @(Html.DControls().NumberBoxFor(m => m.Entity.NotasId).ID(Prefix + "NotasId").Visible(false)) 

                @(Html.DControls().Form<NotasDetallesModel>() 
                    .ID("NotasDetallesModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model) 
                    .Items(items => 
                    { 
                         items.AddGroup().ColCount(4).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                             .Items(groupItems =>{
                                @*groupItems.AddSimpleFor(m => m.Entity.NotasId).ColSpan(1) 
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.NotasId"))) 
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("NotasDetalles.NotasId"))) 
                                     .Editor(e => e.SelectBox().ID(Prefix + "NotasId") 
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("NotasDetalles").LoadAction("GetNotasId").Key("Id")) 
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10)) 
                                     .ValueExpr("Id").DisplayExpr("Id").SearchExpr("Id") 
                                     .SearchEnabled(true).ShowClearButton(true) 
                                ); *@
                                 groupItems.AddSimpleFor(m => m.Entity.NroLinea).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.NroLinea")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "NroLinea").Format("#,##0.##").ReadOnly(true));
                                 
                                 groupItems.AddSimpleFor(m => m.Entity.ServiciosId).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.ServiciosId")))
                                  .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("NotasDetalles.ServiciosId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "ServiciosId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("NotasDetalles").LoadAction("GetServiciosId").Key("Id")
                                         .LoadParams(new { notasId = Model.Entity.NotasId })
                                      )
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("DescripcionCompleta").SearchExpr("Nombre","Codigo")
                                      .OnValueChanged($"{Prefix}OnValueChangedServiciosId")
                                      .SearchEnabled(true).ShowClearButton(true).ReadOnly(!Model.Entity.IsNew)
                                 );
                                 groupItems.AddSimpleFor(m => m.Entity.Cantidad).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.Cantidad")))
                                  .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("NotasDetalles.ServiciosId")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "Cantidad").Min(1).Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true)
                                      .OnValueChanged(Prefix + "ValorServicioOnChanged").ReadOnly(!Model.Entity.IsNew)
                                    );
                                 
                                 groupItems.AddSimpleFor(m => m.Entity.ValorServicio).ColSpan(1)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.ValorServicio")))
                                     .Editor(e=>e.NumberBox().ID(Prefix + "ValorServicio").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true)
                                     .OnValueChanged(Prefix + "ValorServicioOnChanged").ReadOnly(!Model.Entity.IsNew)
                                    );

                                 groupItems.AddSimpleFor(m => m.Entity.SubTotal).ColSpan(1)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.SubTotal")))
                                     .Editor(e=>e.NumberBox().ID(Prefix + "SubTotal").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(true));
                                 groupItems.AddSimpleFor(m => m.Entity.PorcDescuento).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.PorcDescuento")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "PorcDescuento").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(!Model.Entity.IsNew)
                                      .OnValueChanged(Prefix + "ValorServicioOnChanged"));
                                 groupItems.AddSimpleFor(m => m.Entity.PorcImpuesto).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.PorcImpuesto")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "PorcImpuesto").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(!Model.Entity.IsNew)
                                      .OnValueChanged(Prefix + "ValorServicioOnChanged"));


                                 groupItems.AddSimpleFor(m => m.Entity.ValorTotal).ColSpan(1)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("NotasDetalles.ValorTotal")))
                                      .Editor(e=>e.NumberBox().ID(Prefix + "ValorTotal").Format("#,##0.##").ReadOnly(true));
                             });
                    })
             ) 
         } 
         <div asp-validation-summary="All" class="text-danger" id="@(Prefix)ListError"></div> 
     </form> 
</div> 

