@model RecaudosModel 
@{
    string Prefix = "Recaudos"; 

    string UrlSave = Url.Action("Edit", "Recaudos"); 
    string UrlNew = Url.Action("New", "Recaudos"); 
    string UrlDelete = Url.Action("Delete", "Recaudos", new { Id = Model.Entity.Id }); 
    string UrlBack = Url.Action("ListPartial", "Recaudos"); 

    var ToolbarConfig = new ToolbarConfiguration(Prefix) 
        .Title(DApp.DefaultLanguage.GetResource("Recaudos")) 
        .Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew) 
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew)) 
        .Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew) 
        .Back(UrlBack); 
    
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

@(Html.DControls().Toolbar(ToolbarConfig)) 

<div> 
    <div id = "RecaudosMainPanelForm"> 
        <form id="@(Prefix)Form" asp-controller="Recaudos" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.ValorTotalRecibido).ID(Prefix + "ValorTotalRecibido").Visible(false))

                @(Html.DControls().Form<RecaudosModel>()
                    .ID("RecaudosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {

                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("Recaudos.InformacionTransaccion"))
                            .Items(groupItems =>
                            {

                                groupItems.AddSimpleFor(m => m.Entity.CiclosCajasId).ColSpan(6)
                              .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.CiclosCajasId")))
                              .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Recaudos.CiclosCajasId")))
                                   .Editor(e => e.SelectBox().ID(Prefix + "CiclosCajasId").ReadOnly(!Model.Entity.IsNew)
                                   .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetCiclosCajasId").Key("Id").LoadParams(new { isNuevo = Model.Entity.IsNew }))
                                   .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                   .ValueExpr("Id").DisplayExpr(new JS(Prefix + "DisplayExprCiclosCajasId"))
                                   .SearchEnabled(true).ShowClearButton(true)
                              );

                                groupItems.AddSimpleFor(m => m.Entity.FechaRecaudo).ColSpan(6)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.FechaRecaudo")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaRecaudo")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                                groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                        .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                                     .Editor(e => e.DateBox().ReadOnly(true)
                                     .Type(DateBoxType.DateTime)
                                     .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                                     .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                                     .Editor(e => e.DateBox().ReadOnly(true)
                                     .Type(DateBoxType.DateTime)
                                     .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                            });

                        items.AddTabbed()
                       .TabPanelOptions(o =>
                       {
                           o.DeferRendering(false);
                       })
                       .Tabs(tabItems =>
                       {
                           tabItems.Add().ColCount(2)
                               .Title(DApp.DefaultLanguage.GetResource("Recaudos.InformacionCliente"))
                               .Items(tabItem =>
                               {
                                   tabItem.AddSimpleFor(m => m.Entity.EmpresasId).ColSpan(1)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.EmpresasId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Recaudos.EmpresasId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "EmpresasId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetEmpresasId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("RazonSocial").SearchExpr("Id")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );
                                   tabItem.AddSimpleFor(m => m.Entity.SedesId).ColSpan(1)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.SedesId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Recaudos.SedesId")))
                                        .Editor(e => e.SelectBox().ID(Prefix + "SedesId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetSedesId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Id")
                                        .SearchEnabled(true).ShowClearButton(true)
                                   );

                                   tabItem.AddSimpleFor(m => m.Entity.EntidadesId).ColSpan(1)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.EntidadesId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Recaudos.EntidadesId")))
                                        .Editor(e => e.SelectBox().ID(Prefix + "EntidadesId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetEntidadesId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("NumeroIdentificacion","Nombre")
                                        .SearchEnabled(true).ShowClearButton(true)
                                   );

                                   tabItem.AddSimpleFor(m => m.Entity.PacientesId).ColSpan(1)
                                      .Editor(e => e.SelectBox().ID(Prefix + "PacientesId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetPacientesId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("Id")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                               }
                           );

                           tabItems.Add().ColCount(2)
                               .Title(DApp.DefaultLanguage.GetResource("Recaudos.InformacionMedioPago"))
                               .Items(tabItem =>
                               {
                                   tabItem.AddSimpleFor(m => m.Entity.MediosPagoId).ColSpan(1)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.MediosPagoId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Recaudos.MediosPagoId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "MediosPagoId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetMediosPagoId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                                   //tabItem.AddSimpleFor(m => m.Entity.ValorTotalRecibido).ColSpan(1)
                                   //  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Recaudos.ValorTotalRecibido")))
                                   //      .Editor(e => e.NumberBox().Disabled(true).ID(Prefix + "ValorTotalRecibido").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                                   tabItem.AddSimpleFor(m => m.Entity.BancosId).ColSpan(1)
                                         .Editor(e => e.SelectBox().ID(Prefix + "BancosId")
                                         .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Recaudos").LoadAction("GetBancosId").Key("Id"))
                                         .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                         .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                         .SearchEnabled(true).ShowClearButton(true)
                                    );
                                   tabItem.AddSimpleFor(m => m.Entity.NroCheque).ColSpan(1)
                                    .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Recaudos.NroCheque", 50)))
                                         .Editor(e => e.TextBox().ID(Prefix + "NroCheque").ShowClearButton(true));
                                   tabItem.AddSimpleFor(m => m.Entity.NroCuentaTarjeta).ColSpan(1)
                                    .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Recaudos.NroCuentaTarjeta", 50)))
                                         .Editor(e => e.TextBox().ID(Prefix + "NroCuentaTarjeta").ShowClearButton(true));
                                   tabItem.AddSimpleFor(m => m.Entity.NroAutorizacion).ColSpan(1)
                                    .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Recaudos.NroAutorizacion", 50)))
                                         .Editor(e => e.TextBox().ID(Prefix + "NroAutorizacion").ShowClearButton(true));
                                   tabItem.AddSimpleFor(m => m.Entity.Referencia).ColSpan(1)
                                    .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Recaudos.Referencia", 50)))
                                         .Editor(e => e.TextBox().ID(Prefix + "Referencia").ShowClearButton(true));
                                   tabItem.AddSimpleFor(m => m.Entity.FechaConsignacion).ColSpan(1)
                                         .Editor(e => e.DateBox().ID(Prefix + "FechaConsignacion")
                                         .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                               }
                           );


                       });

                    })
                )
            }
        </form> 

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@
         
        <div> 
           <ul class="nav nav-tabs" role="tablist"> 
               <li role="presentation" class="active"> 
                   <a href="#RecaudosDetalles" aria-controls="RecaudosDetalles" role="tab" data-toggle="tab"> 
                       @DApp.DefaultLanguage.GetResource("RecaudosDetalles") 
                   </a> 
               </li> 
           </ul> 
           <div class="tab-content"> 
               <div role="tabpanel" class="tab-pane active" id="MAESTRODETALLE">
                   <partial name="../RecaudosDetalles/ListDetail.cshtml" model=Model view-data="ViewData" />
               </div>
           </div>
        </div>
        

    </div> 
</div> 

