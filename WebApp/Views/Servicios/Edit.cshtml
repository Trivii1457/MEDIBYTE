@model ServiciosModel
@{
    string Prefix = "Servicios";

    string UrlSave = Url.Action("Edit", "Servicios");
    string UrlNew = Url.Action("New", "Servicios");
    string UrlDelete = Url.Action("Delete", "Servicios", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "Servicios");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("Servicios"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave), Model.Entity.IsNew)
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete), UrlBack, Model.Entity.IsNew)
        .Back(UrlBack);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="ServiciosMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="Servicios" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class", "ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.TiposImpuestosId).ID(Prefix + "TiposImpuestosId").Visible(false))

                @(Html.DControls().NumberBoxFor(m => m.Entity.EmpresasId).ID(Prefix + "EmpresasId").Visible(false))

                @(Html.DControls().Form<ServiciosModel>()
                    .ID("ServiciosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>
                            {

                                groupItems.AddSimpleFor(m => m.Entity.CupsId).ColSpan(9)
                                        .Editor(e => e.SelectBox().ID("CupsId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetCupsId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("DescripcionCompleta").SearchExpr("Codigo", "Descripcion")
                                        .SearchEnabled(true).ShowClearButton(true).ReadOnly(!Model.Entity.IsNew)
                                        .OnValueChanged(Prefix + "OnValueChangedCupsId")
                                );
                                groupItems.AddSimpleFor(m => m.Entity.TiposServiciosId).ColSpan(3)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.TiposServiciosId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Servicios.TiposServiciosId")))
                                        .Editor(e => e.SelectBox().ID("TiposServiciosId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetTiposServiciosId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Nombre")
                                        .SearchEnabled(true).ShowClearButton(true)
                                        .OnValueChanged(Prefix + "OnValueChangedTiposServiciosId")
                                );
                                groupItems.AddSimpleFor(m => m.Entity.Codigo).ColSpan(3)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.Codigo")))
                                   .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Servicios.Codigo", 45)))
                                        .Editor(e => e.TextBox().ID(Prefix + "Codigo")
                                        .ShowClearButton(true).ReadOnly(!Model.Entity.IsNew)
                                    );
                                groupItems.AddSimpleFor(m => m.Entity.Nombre).ColSpan(9)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.Nombre")))
                                   .ValidationRules(rules => rules.AddStringLength().Min(0).Max(int.MaxValue).Message(DApp.GetStringLengthResource("Servicios.Nombre", int.MaxValue)))
                                        .Editor(e => e.TextBox().ID(Prefix + "Nombre")
                                        .ShowClearButton(true).ReadOnly(!Model.Entity.IsNew)
                                    );
                                groupItems.AddSimpleFor(m => m.Entity.EspecialidadesId).ColSpan(6)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.EspecialidadesId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Servicios.EspecialidadesId")))
                                      .Editor(e => e.SelectBox().ID("EspecialidadesId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetEspecialidadesId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );
                                groupItems.AddSimpleFor(m => m.Entity.CategoriasServiciosId).ColSpan(3)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.CategoriasServiciosId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Servicios.CategoriasServiciosId")))
                                      .Editor(e => e.SelectBox().ID("CategoriasServiciosId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetCategoriasServiciosId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );
                                groupItems.AddSimpleFor(m => m.Entity.EstadosId).ColSpan(3)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.EstadosId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Servicios.EstadosId")))
                                      .Editor(e => e.SelectBox().ID("EstadosId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetEstadosId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.EstadosIdTipoDuracion).ColSpan(2)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.EstadosIdTipoDuracion")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Servicios.EstadosIdTipoDuracion")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "EstadosIdTipoDuracion")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Servicios").LoadAction("GetEstadosIdTipoDuracion").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );
                                groupItems.AddSimpleFor(m => m.Entity.Duracion).ColSpan(3)
                                      .Editor(e => e.NumberBox().ID(Prefix + "Duracion").Format("#,##0").ShowClearButton(true).ShowSpinButtons(true));
                                groupItems.AddSimpleFor(m => m.Entity.CodigoInterno).ColSpan(3)
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Servicios.CodigoInterno", 45)))
                                      .Editor(e => e.TextBox().ID(Prefix + "CodigoInterno").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.TarifaPlena).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Servicios.TarifaPlena")))
                                    .Editor(e=>e.NumberBox().ID(Prefix + "TarifaPlena").Format("#,##0.##").Min(0).ShowClearButton(true).ShowSpinButtons(true));
                                groupItems.AddEmpty().ColSpan(3);
                                groupItems.AddSimpleFor(m => m.Entity.RequiereProfesional).ColSpan(3).Label(x => x.Visible(false))
                                      .Editor(e => e.CheckBox().ID(Prefix + "RequiereProfesional").Text(DApp.DefaultLanguage.GetResource("Servicios.RequiereProfesional")));

                                groupItems.AddSimpleFor(m => m.Entity.RequiereLecturaResultados).ColSpan(3).Label(x => x.Visible(false))
                                      .Editor(e => e.CheckBox().ID(Prefix + "RequiereLecturaResultados").Text(DApp.DefaultLanguage.GetResource("Servicios.RequiereLecturaResultados")));

                                groupItems.AddSimpleFor(m => m.Entity.EsQuirurgico).ColSpan(3).Label(x => x.Visible(false))
                                      .Editor(e => e.CheckBox().ID(Prefix + "EsQuirurgico").Text(DApp.DefaultLanguage.GetResource("Servicios.EsQuirurgico")));

                                groupItems.AddEmpty().ColSpan(3);

                                groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                                .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                                    .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.Preparacion).ColSpan(12)
                                        .Editor(e => e.TextArea().ID(Prefix + "Preparacion"));

                            });
                    })
                )

            }

        </form>

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@
        
            <div>
               <ul class="nav nav-tabs" role="tablist">
                   <li role="presentation" class="active">
                       <a href="#ServiciosSedes" aria-controls="ServiciosSedes" role="tab" data-toggle="tab">
                           @DApp.DefaultLanguage.GetResource("ServiciosSedes")
                       </a>
                   </li>
               </ul>
               <div class="tab-content">
                   <div role="tabpanel" class="tab-pane active" id="ServiciosSedes">
                       <partial name="../ServiciosSedes/ListDetail.cshtml" model=Model view-data="ViewData" />
                   </div>
               </div>
            </div>
        

    </div>
</div>

