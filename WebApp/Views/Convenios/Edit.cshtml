@model ConveniosModel 
@{
    string Prefix = "Convenios"; 

    string UrlSave = Url.Action("Edit", "Convenios"); 
    string UrlNew = Url.Action("New", "Convenios"); 
    string UrlDelete = Url.Action("Delete", "Convenios", new { Id = Model.Entity.Id }); 
    string UrlBack = Url.Action("ListPartial", "Convenios"); 

    var ToolbarConfig = new ToolbarConfiguration(Prefix) 
        .Title(DApp.DefaultLanguage.GetResource("Convenios")) 
        .Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew) 
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew)) 
        .Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew) 
        .Back(UrlBack); 
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

@(Html.DControls().Toolbar(ToolbarConfig)) 

<div> 
    <div id = "ConveniosMainPanelForm"> 
        <form id="@(Prefix)Form" asp-controller="Convenios" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class", "ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.EmpresasId).ID(Prefix + "EmpresasId").Visible(false))

                @(Html.DControls().Form<ConveniosModel>()
                    .ID("ConveniosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>
                            {

                                groupItems.AddSimpleFor(m => m.Entity.Codigo).ColSpan(3)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.Codigo")))
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Convenios.Codigo", 45)))
                                      .Editor(e => e.TextBox().ID(Prefix + "Codigo").ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.EntidadesId).ColSpan(3)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.EntidadesId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Convenios.EntidadesId")))
                                        .Editor(e => e.SelectBox().ID(Prefix + "EntidadesId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetEntidadesId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre", "Alias", "NumeroIdentificacion")
                                        .SearchEnabled(true).ShowClearButton(true)
                                   );

                                groupItems.AddSimpleFor(m => m.Entity.Nombre).ColSpan(3)
                               .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.Nombre")))
                               .ValidationRules(rules => rules.AddStringLength().Min(0).Max(255).Message(DApp.GetStringLengthResource("Convenios.Nombre", 255)))
                                    .Editor(e => e.TextBox().ID(Prefix + "Nombre").ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.EstadosId).ColSpan(3)
                               .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.EstadosId")))
                               .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Convenios.EstadosId")))
                                    .Editor(e => e.SelectBox().ID(Prefix + "EstadosId")
                                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetEstadosId").Key("Id"))
                                    .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                    .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                    .SearchEnabled(true).ShowClearButton(true)
                               );


                                groupItems.AddSimpleFor(m => m.Entity.FechaInicio).ColSpan(3)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.FechaInicio")))
                                      .Editor(e => e.DateBox().ID(Prefix + "FechaInicio")
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));


                                groupItems.AddSimpleFor(m => m.Entity.FechaCaducidad).ColSpan(3)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.FechaCaducidad")))
                                      .Editor(e => e.DateBox().ID(Prefix + "FechaCaducidad")
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));


                                groupItems.AddSimpleFor(m => m.Entity.DiaFacturacionMes).ColSpan(3)
                                      .Editor(e => e.NumberBox().ID(Prefix + "DiaFacturacionMes").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                                groupItems.AddSimpleFor(m => m.Entity.PeriodicidadPago).ColSpan(3)
                                      .Editor(e => e.NumberBox().ID(Prefix + "PeriodicidadPago").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));

                                groupItems.AddSimpleFor(m => m.Entity.ListaPreciosId).ColSpan(3)
                                      .Editor(e => e.SelectBox().ID(Prefix + "ListaPreciosId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetListaPreciosId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Id")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.FormasPagosId).ColSpan(3)
                                    .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.FormasPagosId")))
                                    .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Convenios.FormasPagosId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "FormasPagosId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetFormasPagosId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.FacturarCodigoInterno).Label(x => x.Visible(false)).ColSpan(3)
                                   .Editor(e => e.CheckBox().ID(Prefix + "FacturarCodigoInterno").Text(DApp.DefaultLanguage.GetResource("Convenios.FacturarCodigoInterno")));

                                groupItems.AddSimpleFor(m => m.Entity.ModalidadesContratacionId).ColSpan(3)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.ModalidadesContratacionId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Convenios.ModalidadesContratacionId")))
                                        .Editor(e => e.SelectBox().ID(Prefix + "ModalidadesContratacionId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetModalidadesContratacionId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                        .SearchEnabled(true).ShowClearButton(true)
                                   );

                                groupItems.AddSimpleFor(m => m.Entity.RequierePresupuesto).Label(x=>x.Visible(false)).ColSpan(3)
                                    .Editor(e=>e.CheckBox().ID(Prefix + "RequierePresupuesto").Text(DApp.DefaultLanguage.GetResource("Convenios.RequierePresupuesto")).OnValueChanged(Prefix + "OnChangePresupuesto"));
                                groupItems.AddSimpleFor(m => m.Entity.Presupuesto).ColSpan(3)
                                    .Editor(e=>e.NumberBox().ID(Prefix + "Presupuesto").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(Model.Entity.RequierePresupuesto!=false? false:true));
                                groupItems.AddSimpleFor(m => m.Entity.SaldoPresupuesto).ColSpan(3)
                                    .Editor(e=>e.NumberBox().ID(Prefix + "SaldoPresupuesto").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(true));

                                groupItems.AddSimpleFor(m => m.Entity.TipoFacturaEstadosId).ColSpan(3)
                                   .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Convenios.TipoFacturaEstadosId")))
                                   .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Convenios.TipoFacturaEstadosId")))
                                        .Editor(e => e.SelectBox().ID(Prefix + "TipoFacturaEstadosId")
                                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Convenios").LoadAction("GetTipoFacturaEstadosId").Key("Id"))
                                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                        .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                        .SearchEnabled(true).ShowClearButton(true)
                                   );

                                groupItems.AddSimpleFor(m => m.Entity.RequierePacientes).Label(x=>x.Visible(false)).ColSpan(3)
                             .Editor(e=>e.CheckBox().ID(Prefix + "RequierePacientes").Text(DApp.DefaultLanguage.GetResource("Convenios.RequierePacientes")).OnValueChanged(Prefix + "OnChangePacientes"));

                                groupItems.AddSimpleFor(m => m.Entity.NroPacientes).ColSpan(3)
                                .Editor(e => e.NumberBox().ID(Prefix + "NroPacientes").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(Model.Entity.RequierePacientes!=false? false:true));
                                ;

                                groupItems.AddSimpleFor(m => m.Entity.NroPacientesRestantes).ColSpan(3)
                             .Editor(e=>e.NumberBox().ID(Prefix + "NroPacientesRestantes").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true).ReadOnly(true));
                                
                                groupItems.AddEmpty().ColSpan(3);

                                groupItems.AddSimpleFor(m => m.Entity.NroContrato).ColSpan(3)
                                      .Editor(e => e.TextBox().ID(Prefix + "NroContrato").ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.NroPoliza).ColSpan(3)
                                      .Editor(e => e.TextBox().ID(Prefix + "NroPoliza").ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.PlanBeneficio).ColSpan(6)
                                      .Editor(e => e.TextBox().ID(Prefix + "PlanBeneficio").ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                                .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                                    .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                                    .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2000).Message(DApp.GetStringLengthResource("Convenios.Observaciones", 2000)))
                                    .Editor(e => e.TextArea().ID(Prefix + "Observaciones"));




                            });
                    })
                )
            }
            
        </form> 

       @*  Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE"*@ 
         
        <div> 
           <ul class="nav nav-tabs" role="tablist"> 
               <li role="presentation" class="active"> 
                   <a href="#ConveniosServicios" aria-controls="ConveniosServicios" role="tab" data-toggle="tab"> 
                       @DApp.DefaultLanguage.GetResource("ConveniosServicios") 
                   </a> 
               </li> 
           </ul> 
           <div class="tab-content"> 
               <div role="tabpanel" class="tab-pane active" id="ConveniosServicios">
                   <partial name="../ConveniosServicios/ListDetail.cshtml" model=Model view-data="ViewData" />
               </div>
           </div>
        </div>
        

    </div> 
</div> 

