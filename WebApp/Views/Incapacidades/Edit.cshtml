@model IncapacidadesModel 
@{
    string Prefix = "Incapacidades";

    string UrlSave = Url.Action("Edit", "Incapacidades");
    string UrlNew = Url.Action("New", "Incapacidades");
    string UrlDelete = Url.Action("Delete", "Incapacidades", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "Incapacidades");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("Incapacidades"))
        //.Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew)
        //.New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        //.Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>()
        {
            new ButtonToolbar
            {
                Action = "ImprimirIncapacidadesPorId",
                Text = @DApp.DefaultLanguage.GetResource("DEFAULT.Imprimir"),
                Disabled = (Model.Entity.IsNew),
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "print"
            }
        })
        .Back(UrlBack);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

@(Html.DControls().Toolbar(ToolbarConfig)) 

<div> 
    <div id = "IncapacidadesMainPanelForm"> 
        <form id="@(Prefix)Form" asp-controller="Incapacidades" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

                @(Html.DControls().NumberBoxFor(m => m.Entity.HIstoriasClinicasId).ID(Prefix + "HIstoriasClinicasId").Visible(false))

                @(Html.DControls().Form<IncapacidadesModel>()
                    .ID("IncapacidadesModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>{

                                groupItems.AddSimpleFor(m => m.Entity.NroOrden).ColSpan(3)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroOrden")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "NroOrden").ShowClearButton(true).ShowSpinButtons(true));

                                groupItems.AddEmpty().ColSpan(9);

                                groupItems.AddSimpleFor(m => m.Entity.ProfesionalId).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.ProfesionalId")))
                                  .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.ProfesionalId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "ProfesionalId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetProfesionalId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("NumeroIdentificacion", "PrimerNombre", "SegundoNombre", "PrimerApellido", "SegundoApellido")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.PacientesId).ColSpan(6)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.PacientesId")))
                                  .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.PacientesId")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "PacientesId")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetPacientesId").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("NumeroIdentificacion", "PrimerNombre", "SegundoNombre", "PrimerApellido", "SegundoApellido")
                                      .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.Fecha).ColSpan(3)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.Fecha")))
                                      .Editor(e => e.DateBox().ID(Prefix + "Fecha")
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                                groupItems.AddSimpleFor(m => m.Entity.FechaInicio).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.FechaInicio")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaInicio")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));


                                groupItems.AddSimpleFor(m => m.Entity.NroDias).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroDias")));

                                groupItems.AddSimpleFor(m => m.Entity.EsProrroga).Label(x => x.Visible(false)).ColSpan(3)
                                       .Editor(e => e.CheckBox().ID(Prefix + "EsProrroga").Text(DApp.DefaultLanguage.GetResource("Incapacidades.EsProrroga")));

                                groupItems.AddSimpleFor(m => m.Entity.DiagnosticosId).ColSpan(6)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId")))
                                    .Editor(e => e.SelectBox().ID(Prefix + "DiagnosticosId")
                                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetDiagnosticosId").Key("Id")
                                        .LoadParams(new { hcId = Model.Entity.HIstoriasClinicasId })
                                    )
                                    .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                    .ValueExpr("Id").DisplayExpr("DescripcionCompleta").SearchExpr("Descripcion")
                                    .SearchEnabled(true).ShowClearButton(true)
                               );

                                groupItems.AddSimpleFor(m => m.Entity.IncapacidadesOrigenesId).ColSpan(6)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.IncapacidadesOrigenesId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.IncapacidadesOrigenesId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "IncapacidadesOrigenesId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetIncapacidadesOrigenesId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                                groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                                      .Editor(e => e.TextArea().ID(Prefix + "Observaciones").Height(200));
                            });
                    })
                )
            }
        </form> 

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@
        @* 
        <div> 
           <ul class="nav nav-tabs" role="tablist"> 
               <li role="presentation" class="active"> 
                   <a href="#MAESTRODETALLE" aria-controls="MAESTRODETALLE" role="tab" data-toggle="tab"> 
                       @DApp.DefaultLanguage.GetResource("MAESTRODETALLE") 
                   </a> 
               </li> 
           </ul> 
           <div class="tab-content"> 
               <div role="tabpanel" class="tab-pane active" id="MAESTRODETALLE">
                   <partial name="../MAESTRODETALLE/ListDetail.cshtml" model=Model view-data="ViewData" />
               </div>
           </div>
        </div>
        *@

    </div> 
</div> 

