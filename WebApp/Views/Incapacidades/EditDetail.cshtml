@model IncapacidadesModel 
@{
    string Prefix = "Incapacidades"; 
    string UrlDelete = Url.Action("DeleteDetail", "Incapacidades", new { Id = Model.Entity.Id }); 

    var toolbarDetailconfig = new ToolbarDetailConfiguration(Prefix).Delete(UrlDelete,Model.Entity.IsNew,true).Save(true).Cancel(); 
} 

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" /> 

<div>@(Html.DControls().Toolbar(toolbarDetailconfig))</div>

<div> 
    <form id="@(Prefix)Form" asp-controller="Incapacidades" asp-action="EditDetail" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#IncapacidadesMainPanelForm" data-ajax-success="@(Prefix)FormSuccessDetail" data-ajax-failure="@(Prefix)FormFailureDetail" data-ajax="true">
        @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
        @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroupDetail"))
        {
            @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
            @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
            @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
            @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
            @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
            @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

            @(Html.DControls().NumberBoxFor(m => m.Entity.ProfesionalId).ID(Prefix + "ProfesionalId").Visible(false))

            @(Html.DControls().NumberBoxFor(m => m.Entity.PacientesId).ID(Prefix + "PacientesId").Visible(false))

            @(Html.DControls().NumberBoxFor(m => m.Entity.HIstoriasClinicasId).ID(Prefix + "HIstoriasClinicasId").Visible(false))

            @(Html.DControls().Form<IncapacidadesModel>()
                    .ID("IncapacidadesModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>{

                                groupItems.AddSimpleFor(m => m.Entity.NroOrden).ColSpan(3)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroOrden")))
                                     .Editor(e => e.NumberBox().ID(Prefix + "NroOrden").ShowClearButton(true).ShowSpinButtons(true).Disabled(true));

                                groupItems.AddSimpleFor(m => m.Entity.Fecha).ColSpan(3)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.Fecha")))
                                      .Editor(e=>e.DateBox().ID(Prefix + "Fecha")
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).Disabled(true));

                                groupItems.AddEmpty().ColSpan(6);

                                groupItems.AddSimpleFor(m => m.Entity.FechaInicio).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.FechaInicio")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaInicio").OnValueChanged($"{Prefix}CalcularFechaFinalizacion")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.NroDias).ColSpan(3)
                                    .Editor(e => e.NumberBox().Min(0).ShowSpinButtons(true).ID($"{Prefix}NroDias").OnValueChanged($"{Prefix}CalcularFechaFinalizacion"))
                                    .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroDias")));

                                groupItems.AddSimpleFor(m => m.Entity.FechaFinalizacion).ColSpan(3)
                                    .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.FechaInicio")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaFinalizacion")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).ReadOnly(true));

                                groupItems.AddEmpty().ColSpan(3);

                                groupItems.AddSimpleFor(m => m.Entity.DiagnosticosId).ColSpan(5)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId")))
                                    .Editor(e => e.SelectBox().ID(Prefix + "DiagnosticosId")
                                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetDiagnosticosId").Key("Id")
                                        .LoadParams(new { hcId = Model.Entity.HIstoriasClinicasId })
                                    )
                                    .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                    .ValueExpr("Id").DisplayExpr("DescripcionCompleta").SearchExpr("Descripcion", "Codigo")
                                    .SearchEnabled(true).ShowClearButton(true)
                               );

                                groupItems.AddSimpleFor(m => m.Entity.IncapacidadesOrigenesId).ColSpan(5)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.IncapacidadesOrigenesId")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.IncapacidadesOrigenesId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "IncapacidadesOrigenesId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetIncapacidadesOrigenesId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                                groupItems.AddSimpleFor(m => m.Entity.EsProrroga).Label(x => x.Visible(false)).ColSpan(2)
                                       .Editor(e => e.CheckBox().ID(Prefix + "EsProrroga").Text(DApp.DefaultLanguage.GetResource("Incapacidades.EsProrroga")));


                                groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                                      .Editor(e => e.TextArea().ID(Prefix + "Observaciones").Height(200));
                            });
                    })
             )
        }

    </form> 
</div> 

