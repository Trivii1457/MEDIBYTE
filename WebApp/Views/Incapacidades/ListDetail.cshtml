@*  Remplazar FATHERModel por el modelo del padre al que pertenece   *@ 
 
@model HistoriasClinicasModel 
@{ 
    string Prefix = "Incapacidades"; 
    string UrlOnClick = Url.Action("EditDetail", "Incapacidades"); 
    string UrlNew = Url.Action("NewDetail", "Incapacidades", new { IdFather = Model.Entity.Id }); 

    var DataGridDetailConfig = new DataGridConfiguration<Incapacidades>(Prefix) 
        .OnClick(UrlOnClick, new { Id = "Id" }, Prefix + "MainPanelForm") 
        .New(UrlNew,Model.Entity.IsNew,Prefix + "MainPanelForm") 
        .Exports(true,true); 
} 
 


@* ------------ Descomentar el siguiente codigo si es una edicion en maestro --------------- *@
 

<div class="card cardDeatil"> 
    <div class="card-body">
        <div class="box-body table-responsive no-padding"> 
        @(Html.DControls().DataGridSimple<Incapacidades>(DataGridDetailConfig)
            .ID("IncapacidadesDetalleDataGrid")
            .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("Get").Key("Id"))
            .DataSourceOptions(x=>x.Filter("['HIstoriasClinicasId','=','" + @Model.Entity.Id+"']")) // Cambiar IdFather por el campo foraneo hacia el padre
            .Columns(columns =>
            {
                //columns.AddFor(m => m.ProfesionalId); 
                //columns.AddFor(m => m.Fecha);
                //columns.AddFor(m => m.HistoriasClinicas.Id);
                //columns.AddFor(m => m.Pacientes.Id);
                columns.AddFor(m => m.NroOrden);
                columns.AddFor(m => m.NroDias);
                columns.AddFor(m => m.FechaInicio);
                columns.AddFor(m => m.Diagnosticos.Descripcion);
                columns.AddFor(m => m.Observaciones);
            })
        ) 
        </div> 
        <div id="IncapacidadesMainPanelForm"></div> 
    </div> 
</div> 
 


@* ------------ Descomentar el siguiente codigo si es una edicion en grilla y COMENTAR LOS METODOS OnClick y New del DataGridDetailConfig --------------- *@
@* 
<script> 
     function @(Prefix)OnInitNewRowDetalleDataGrid(model) { 
         model = GetAuditoryData(model); 
         model.data.IdFather = "@Model.Entity.Id"; // Cambiar IdFather por el campo foraneo hacia el padre 
     } 
</script> 
<div class="card cardDeatil"> 
    <div class="card-body">
        <div class="box-body table-responsive no-padding"> 
             @(Html.DControls().DataGridSimple<Incapacidades>(DataGridDetailConfig) 
                 .ID("IncapacidadesDetalleDataGrid") 
                 .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("Get").Key("Id") 
                     .InsertAction("AddInGrid").InsertMethod("POST").UpdateAction("ModifyInGrid").UpdateMethod("POST").DeleteAction("DeleteInGrid").DeleteMethod("POST") 
                 ) 
                 .DataSourceOptions(x=>x.Filter("['IdFather','=','"+@Model.Entity.Id+"']")) // Cambiar IdFather por el campo foraneo hacia el padre
                 .Editing(editing => editing.Mode(GridEditMode.Batch).AllowAdding(!Model.Entity.IsNew).AllowUpdating(true).AllowDeleting(true)) 
                 .OnInitNewRow(Prefix + "OnInitNewRowDetalleDataGrid") 
                 .OnRowInserted("OnRowInsertedDetalleDataGrid").OnRowUpdated("OnRowUpdatedDetalleDataGrid").OnRowRemoved("OnRowRemovedDetalleDataGrid").OnDataErrorOccurred("OnDataErrorOccurredDetalleDataGrid") 
                 .Columns(columns => 
                 { 
                     columns.AddFor(m => m.ProfesionalId) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.ProfesionalId"))) 
                         .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.ProfesionalId"))) 
                             .Lookup(lookup => lookup 
                             .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetProfesionalId").Key("Id")) 
                             .DataSourceOptions(o => o.Paginate(true).PageSize(10)) 
                             .ValueExpr("Id").DisplayExpr("Id")); 
                     columns.AddFor(m => m.Fecha).Format(DApp.DefaultLanguage.DateFormat) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.Fecha"))); 
                     columns.AddFor(m => m.HIstoriasClinicasId) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.HIstoriasClinicasId"))) 
                         .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.HIstoriasClinicasId"))) 
                             .Lookup(lookup => lookup 
                             .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetHIstoriasClinicasId").Key("Id")) 
                             .DataSourceOptions(o => o.Paginate(true).PageSize(10)) 
                             .ValueExpr("Id").DisplayExpr("Id")); 
                     columns.AddFor(m => m.PacientesId) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.PacientesId"))) 
                         .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.PacientesId"))) 
                             .Lookup(lookup => lookup 
                             .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetPacientesId").Key("Id")) 
                             .DataSourceOptions(o => o.Paginate(true).PageSize(10)) 
                             .ValueExpr("Id").DisplayExpr("Id")); 
                     columns.AddFor(m => m.NroOrden).Format("#,##0.##") 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroOrden"))); 
                     columns.AddFor(m => m.NroDias) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.NroDias"))); 
                     columns.AddFor(m => m.FechaInicio).Format(DApp.DefaultLanguage.DateFormat) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.FechaInicio"))); 
                     columns.AddFor(m => m.DiagnosticosId) 
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId"))) 
                         .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Incapacidades.DiagnosticosId"))) 
                             .Lookup(lookup => lookup 
                             .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Incapacidades").LoadAction("GetDiagnosticosId").Key("Id")) 
                             .DataSourceOptions(o => o.Paginate(true).PageSize(10)) 
                             .ValueExpr("Id").DisplayExpr("Id")); 
                     columns.AddFor(m => m.Recomendaciones) 
                     ; 
                     columns.AddFor(m => m.Observaciones) 
                     ; 
             }) 
         ) 
        </div> 
    </div> 
</div> 
*@ 
