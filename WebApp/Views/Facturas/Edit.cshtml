@model FacturasModel
@{
    string Prefix = "Facturas";

    string UrlSave = Url.Action("Edit", "Facturas");
    string UrlNew = Url.Action("New", "Facturas");
    string UrlDelete = Url.Action("Delete", "Facturas", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "Facturas");
    string UrlDianXml = Url.Action("DownloadInvoiceFileXML", "Facturas", new { id = Model.Entity.Id });

    bool enviadoDian = false;
    if (!string.IsNullOrWhiteSpace(Model.Entity.DIANResponse))
    {
        if (Model.Entity.DIANResponse.Contains("DIAN Aceptado"))
        {
            enviadoDian = true;
        }
    }


    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("Facturas"))
        //.Save(DApp.ActionViewSecurity(Context, UrlSave),Model.Entity.IsNew)
        //.New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        //.Delete(UrlDelete,DApp.ActionViewSecurity(Context,UrlDelete),UrlBack,Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>()
        {
            new ButtonToolbar
            {
                Action = "MostrarPopudModificarDatosFactura",
                Text = @DApp.DefaultLanguage.GetResource("Facturas.ModificarDatosFactura"),
                Disabled = Model.Entity.IsNew || !string.IsNullOrWhiteSpace(Model.Entity.CUFE),
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "background"
            },
            new ButtonToolbar
            {
                Action = "ImprimirFacturaPorId",
                Text = @DApp.DefaultLanguage.GetResource("DEFAULT.Imprimir"),
                Disabled = Model.Entity.IsNew,
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "print"
            },
            new ButtonToolbar
            {
                Action = "EnviarDIAN",
                Text = @DApp.DefaultLanguage.GetResource("Facturas.EnviarDIAN"),
                Disabled = Model.Entity.IsNew || enviadoDian,
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "expand"
            },
            new ButtonToolbar
            {
                Action = "EnviarFactura",
                Text = @DApp.DefaultLanguage.GetResource("Facturas.EnviarCorreo"),
                Disabled = Model.Entity.IsNew || !enviadoDian,
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "email"
            }
        })
        .Back(UrlBack);

    var DataGridDetailConfig = new DataGridConfiguration<ServiciosFacturar>(Prefix)
 //.OnClick(UrlOnClick, new { Id = "Id" }, Prefix + "MainPanelForm")
 //.New(UrlNew, Model.Entity.IsNew, Prefix + "MainPanelForm")
 .Exports(true, true);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="FacturasMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="Facturas" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.IdDbusiness).ID(Prefix + "IdDbusiness").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.UrlReport).ID(Prefix + "UrlReport").Visible(false))
                @(Html.DControls().CheckBoxFor(m => m.Entity.TieneNotas).ID(Prefix + "TieneNotas").Visible(false))

                @(Html.DControls().Form<FacturasModel>
            ()
            .ID("FacturasModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
            .Items(items =>
            {
                items.AddGroup().ColCount(3).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                .Items(groupItems =>{

                    groupItems.AddSimpleFor(m => m.Entity.DocumentosId).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.DocumentosId")))
                        .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.DocumentosId")))
                        .Editor(e => e.SelectBox().ID(Prefix + "DocumentosId")
                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetDocumentosId").Key("Id"))
                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                        .ValueExpr("Id").DisplayExpr("DocumentoCompleto").SearchExpr("Prefijo", "Descripcion")
                        .ReadOnly(true)
                        );
                    groupItems.AddSimpleFor(m => m.Entity.NroConsecutivo).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.NroConsecutivo")))
                        .Editor(e => e.NumberBox().ID(Prefix + "NroConsecutivo").Format("#,##0.##").ReadOnly(true));
                    groupItems.AddSimpleFor(m => m.Entity.Fecha).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.Fecha")))
                        .Editor(e => e.DateBox().ID(Prefix + "Fecha")
                        .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ReadOnly(true));

                    groupItems.AddSimpleFor(m => m.Entity.OrdenCompra).ColSpan(1)
                        .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Facturas.OrdenCompra", 50)))
                        .Editor(e => e.TextBox().ID(Prefix + "OrdenCompra").ReadOnly(true));
                    groupItems.AddSimpleFor(m => m.Entity.ReferenciaFactura).ColSpan(1)
                        .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("Facturas.ReferenciaFactura", 50)))
                        .Editor(e => e.TextBox().ID(Prefix + "ReferenciaFactura").ReadOnly(true));

                    groupItems.AddSimpleFor(m => m.Entity.FormasPagosId).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.FormasPagosId")))
                        .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Facturas.FormasPagosId")))
                        .Editor(e => e.SelectBox().ID(Prefix + "FormasPagosId")
                        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetFormasPagosId").Key("Id"))
                        .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                        .ValueExpr("Id").DisplayExpr(new JS(Prefix + "DisplayExprFormasPagosId")).SearchExpr("Codigo", "Nombre")
                        .ReadOnly(true)
                        );

                    groupItems.AddSimpleFor(m => m.Entity.MediosPagoId).ColSpan(2)
                                     .Editor(e => e.SelectBox().ID(Prefix + "MediosPagoId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetMediosPagoId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true).ReadOnly(true)
                                );
                    groupItems.AddSimpleFor(m => m.Entity.TiposRegimenesId).ColSpan(1)
                         .Editor(e => e.SelectBox().ID(Prefix + "TiposRegimenesId")
                         .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetTiposRegimenesId").Key("Id"))
                         .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                         .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                         .SearchEnabled(true).ShowClearButton(true).ReadOnly(true)
                    );

                    groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(3)
                        .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2000).Message(DApp.GetStringLengthResource("Facturas.Observaciones", 50)))
                        .Editor(e => e.TextArea().ID(Prefix + "Observaciones").ReadOnly(true));

                    groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                        .Editor(e => e.TextBox().ReadOnly(true));
                    groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                         .Editor(e => e.DateBox().ReadOnly(true)
                         .Type(DateBoxType.DateTime)
                         .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                    groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                         .Editor(e => e.TextBox().ReadOnly(true));
                    groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                         .Editor(e => e.DateBox().ReadOnly(true)
                         .Type(DateBoxType.DateTime)
                         .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                    groupItems.AddTabbed().ColSpan(3)
                    .TabPanelOptions(o =>{o.DeferRendering(false);})
                    .Tabs(tabItems =>{
                        tabItems.Add().ColCount(2)
                        .Title("Valores")
                        .Items(tabItem =>
                        {
                            tabItem.AddSimpleFor(m => m.Entity.ValorCopagoCuotaModeradora).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.ValorCopagoCuotaModeradora")))
                        .Editor(e => e.NumberBox().ID(Prefix + "ValorCopagoCuotaModeradora").Format("#,##0.##").ReadOnly(true));
                            tabItem.AddEmpty().ColSpan(1);
                            tabItem.AddSimpleFor(m => m.Entity.ValorSubtotal).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.ValorSubtotal")))
                        .Editor(e => e.NumberBox().ID(Prefix + "ValorSubtotal").Format("#,##0.##").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.ValorDescuentos).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.ValorDescuentos")))
                        .Editor(e => e.NumberBox().ID(Prefix + "ValorDescuentos").Format("#,##0.##").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.ValorImpuestos).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.ValorImpuestos")))
                        .Editor(e => e.NumberBox().ID(Prefix + "ValorImpuestos").Format("#,##0.##").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.ValorTotal).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.ValorTotal")))
                        .Editor(e => e.NumberBox().ID(Prefix + "ValorTotal").Format("#,##0.##").ReadOnly(true));

                        });

                        tabItems.Add()
                    .Title("Estados")
                    .Items(tabItem =>{
                        //tabItem.AddSimpleFor(m => m.Phone);
                        tabItem.AddSimpleFor(m => m.Entity.Estadosid).ColSpan(2)
                            .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.Estadosid")))
                            .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Facturas.Estadosid")))
                            .Editor(e => e.SelectBox().ID(Prefix + "Estadosid")
                            .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetEstadosid").Key("Id"))
                            .DataSourceOptions(o => o.Paginate(true).PageSize(10).Filter("['Tipo','=','FACTURA']"))
                            .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Id")
                            .ReadOnly(true)
                            );

                        tabItem.AddSimpleFor(m => m.Entity.Saldo).ColSpan(1)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.Saldo")))
                        .Editor(e => e.NumberBox().ID(Prefix + "Saldo").Format("#,##0.##").ReadOnly(true));

                    }
                        );

                        tabItems.Add()
                        .Title(DApp.GetResource("Facturas.FacturacionElectronica"))
                        .Items(tabItem =>
                        {
                            tabItem.AddSimple().Template(new TemplateName($"{Prefix}BotonValidacionDIAN"));
                            tabItem.AddSimpleFor(m => m.Entity.CUFE).ColSpan(1)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(255).Message(DApp.GetStringLengthResource("Facturas.CUFE", 255)))
                                .Editor(e => e.TextBox().ID(Prefix + "CUFE").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.IssueDate).ColSpan(1)
                                .Editor(e => e.DateBox().ID(Prefix + "IssueDate")
                                .DisplayFormat(DApp.DefaultLanguage.DateFormat).ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.DIANResponse).ColSpan(1)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(1024).Message(DApp.GetStringLengthResource("Facturas.DIANResponse", 1024)))
                                .Editor(e => e.TextArea().ID(Prefix + "DIANResponse").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.XmlUrl).ColSpan(1)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2048).Message(DApp.GetStringLengthResource("Facturas.XmlUrl", 2048)))
                                .Editor(e => e.TextArea().ID(Prefix + "XmlUrl").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.ErrorReference).ColSpan(1)
                                .Editor(e => e.TextBox().ID(Prefix + "ErrorReference").ReadOnly(true));
                            tabItem.AddSimpleFor(m => m.Entity.UrlTracking).ColSpan(1)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2048).Message(DApp.GetStringLengthResource("Facturas.UrlTracking", 2048)))
                                .Editor(e => e.TextArea().ID(Prefix + "UrlTracking").ReadOnly(true));

                        });


                    });

                    groupItems.AddSimpleFor(m => m.Entity.EmpresasId).ColSpan(1)
                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.EmpresasId")))
                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Facturas.EmpresasId")))
                .Editor(e => e.SelectBox().ID(Prefix + "EmpresasId")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetEmpresasId").Key("Id"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                .ValueExpr("Id").DisplayExpr("RazonSocial").SearchExpr("Id").ReadOnly(true)
                );

                    groupItems.AddSimpleFor(m => m.Entity.SedesId).ColSpan(1)
                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.SedesId")))
                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Facturas.SedesId")))
                .Editor(e => e.SelectBox().ID(Prefix + "SedesId")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetSedesId").Key("Id"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Id")
                .ReadOnly(true)
                );

                    groupItems.AddSimpleFor(m => m.Entity.EntidadesId).ColSpan(2)
                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.EntidadesId")))
                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Facturas.EntidadesId")))
                .Editor(e => e.SelectBox().ID(Prefix + "EntidadesId")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetEntidadesId").Key("Id"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Id")
                .ReadOnly(true)
                );






                    //groupItems.AddSimpleFor(m => m.Entity.FehaInicial).ColSpan(1)
                    //  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.FehaInicial")))
                    //      .Editor(e=>e.DateBox().ID(Prefix + "FehaInicial")
                    //      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));
                    //groupItems.AddSimpleFor(m => m.Entity.FechaFinal).ColSpan(1)
                    //  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.FechaFinal")))
                    //      .Editor(e=>e.DateBox().ID(Prefix + "FechaFinal")
                    //      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));

                    //groupItems.AddSimpleFor(m => m.Entity.Saldo).ColSpan(1)
                    //  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Facturas.Saldo")))
                    //      .Editor(e=>e.NumberBox().ID(Prefix + "Saldo").Format("#,##0.##").ShowClearButton(true).ShowSpinButtons(true));
                    //groupItems.AddSimpleFor(m => m.Entity.FilialesId).ColSpan(1)
                    //      .Editor(e => e.SelectBox().ID(Prefix + "FilialesId")
                    //      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Facturas").LoadAction("GetFilialesId").Key("Id"))
                    //      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                    //      .ValueExpr("Id").DisplayExpr("Id").SearchExpr("Id")
                    //      .SearchEnabled(true).ShowClearButton(true)
                    // );





                });
            })
            )
            }
        </form>

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@

        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#FacturasDetalles" aria-controls="FacturasDetalles" role="tab" data-toggle="tab">
                        @DApp.DefaultLanguage.GetResource("FacturasDetalles")
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="FacturasDetalles">

                    <partial name="../FacturasDetalles/ListDetail.cshtml" model=Model view-data="ViewData" />


                    @*@if (Model.Entity.EsCopagoModeradora)
                        {
                            <partial name="../FacturasCopagoCuotaModeradoras/ListDetail.cshtml" model=Model view-data="ViewData" />
                        }
                        else
                        {
                            @(Html.DControls().DataGridSimple<ServiciosFacturar>(DataGridDetailConfig)
                            .ID("AdmisionesServiciosPrestadosDetalleDataGrid")
                            .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AdmisionesServiciosPrestados").LoadAction("GetServiciosFacturados").Key("Id"))
                            .DataSourceOptions(x=>x.Filter("['FacturasId','=','" + @Model.Entity.Id+"']")) // Cambiar IdFather por el campo foraneo hacia el padre
                            .Columns(columns =>
                            {
                                //columns.AddFor(m => m.Admisiones.Id);
                                columns.AddFor(m => m.ServiciosId)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("AdmisionesServiciosPrestados.ServciosId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("AdmisionesServiciosPrestados.ServciosId")))
                                .Lookup(lookup => lookup
                                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AdmisionesServiciosPrestados").LoadAction("GetServiciosId").Key("Id"))
                                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                .ValueExpr("Id").DisplayExpr("Nombre"));

                                //columns.AddFor(m => m.Atenciones.Id);
                                //columns.AddFor(m => m.Observaciones);
                                //columns.AddFor(m => m.Recomendaciones);
                                columns.AddFor(m => m.Cantidad);
                                columns.AddFor(m => m.ValorServicio).Width(150);
                                //columns.AddFor(m => m.ValorCopagoCuotaModeradora).Width(150);
                                columns.AddFor(m => m.SubTotal).Width(150);
                                columns.AddFor(m => m.ValorDescuento).Width(150);
                                columns.AddFor(m => m.ValorImpuesto).Width(150);
                                columns.AddFor(m => m.Total).Width(150);
                                //columns.AddFor(m => m.Facturado);
                                //columns.AddFor(m => m.FacturasGeneracion.Id);
                                //columns.AddFor(m => m.Facturas.Id);
                            })
                        )
                        }*@
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.DControls().Popup()
            .ID($"{Prefix}PopupModificarDatosFactura")
            .Width(800)
            .Height(370)
            .ShowTitle(true)
            .Title(DApp.DefaultLanguage.GetResource("Facturas.ModificarDatosFactura"))
            .Visible(false)
            .DragEnabled(false)
            .CloseOnOutsideClick(false)
            .ContentTemplate(new TemplateName($"{Prefix}TemplatePopupModificarDatosFactura"))
        )

@using (Html.DevExtreme().NamedTemplate($"{Prefix}TemplatePopupModificarDatosFactura"))
{
    <div id="@(Prefix)Errores" class="text-danger text-sm-left"></div>
    <div class="form-group">
        <label for="@($"{Prefix}CambioOrdenCompra")">@DApp.DefaultLanguage.GetResource("Facturas.OrdenCompra"):</label>
        @(Html.DControls().TextBox().ID(Prefix + "CambioOrdenCompra").InputAttr("class", "form-control"))
    </div>
    <div class="form-group">
        <label for="@($"{Prefix}CambioReferenciaFactura")">@DApp.DefaultLanguage.GetResource("Facturas.ReferenciaFactura"):</label>
        @(Html.DControls().TextBox().ID(Prefix + "CambioReferenciaFactura").Placeholder(DApp.DefaultLanguage.GetResource("Facturas.ReferenciaFactura")).InputAttr("class", "form-control"))
    </div>
    <div class="form-group">
        <label for="@($"{Prefix}CambioObservaciones")">@DApp.DefaultLanguage.GetResource("Facturas.Observaciones"):</label>
        @(Html.DControls().TextArea().ID(Prefix + "CambioObservaciones").Placeholder(DApp.DefaultLanguage.GetResource("Facturas.Observaciones")).InputAttr("class", "form-control"))
    </div>
    <div class="row d-flex justify-content-center">
        <button class="btn btn-dark btn" onclick="ModificarDatosFactura()">MODIFICAR</button>
    </div>
}

@using (Html.DevExtreme().NamedTemplate($"{Prefix}BotonValidacionDIAN"))
{
    @if (string.IsNullOrWhiteSpace(Model.Entity.ErrorReference) && string.IsNullOrWhiteSpace(Model.Entity.UrlTracking) && string.IsNullOrWhiteSpace(Model.Entity.DIANResponse))
    {
        <span>@DApp.DefaultLanguage.GetResource("Facturas.NotInformation")</span>
    }
    else if (!string.IsNullOrWhiteSpace(Model.Entity.DIANResponse) && Model.Entity.DIANResponse.Contains("Aceptado"))
    {
        <button type="button" onclick="DescargarArchivo('@UrlDianXml')" class="btn btn-sm btn-outline-success">@DApp.DefaultLanguage.GetResource("Facturas.AceptadoDIAN")</button>
}
    else if (string.IsNullOrEmpty(Model.Entity.ErrorReference))
    {
        string url = "";
        if( !string.IsNullOrWhiteSpace(Model.Entity.UrlTracking))
         url = Model.Entity.UrlTracking.Split("|")[6];
        if (!string.IsNullOrWhiteSpace(url))
        {
            <a href="@url" target="_blank" class="btn btn-sm btn-outline-danger">@DApp.DefaultLanguage.GetResource("Facturas.ValidacionAcepta")</a>
        }
        else
        {
            @*<DxButton RenderStyle="@ButtonRenderStyle.Warning" RenderStyleMode="@ButtonRenderStyleMode.Contained" Text="@GetResource("Invoice.InformationDian")" SizeMode="@SizeMode.Small" Click="@(x => OpenPopup(GetResource("Invoice.InformationDian"), Model.UrlTracking) )" />*@
        }
    }
    else
    {
        @*<DxButton RenderStyle="@ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Contained" Text="@GetResource("Invoice.ErrorDian")" SizeMode="@SizeMode.Small" Click="@(x=> OpenPopup( GetResource("Invoice.ErrorDian"), Model.ErrorReference ) )" />*@
    }

    @*<button class="btn btn-sm btn-outline-warning">Descargar</button>*@
}