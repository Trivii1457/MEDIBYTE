@model FacturasGeneracionModel
@{
    string Prefix = "FacturasGeneracion";

    string UrlSave = Url.Action("Edit", "FacturasGeneracion");
    string UrlNew = Url.Action("New", "FacturasGeneracion");
    string UrlDelete = Url.Action("Delete", "FacturasGeneracion", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "FacturasGeneracion");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("FacturasGeneracion"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave) || !Model.Process, Model.Entity.IsNew)
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete) || !Model.Process, UrlBack, Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>()
        {
            new ButtonToolbar
            {
                Action = "ImprimirFacturaPorId",
                Text = @DApp.DefaultLanguage.GetResource("DEFAULT.Imprimir"),
                Disabled = Model.Entity.IsNew,
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "print"
            },
            new ButtonToolbar
            {
                Action = "ImprimirImprimirAnexo",
                Text = @DApp.DefaultLanguage.GetResource("FacturasGeneracion.ImprimirAnexo"),
                Disabled = (Model.Entity.IsNew),
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "print"
            }
        })
        .Back(UrlBack);

    var DataGridDetailConfig = new DataGridConfiguration<ServiciosFacturar>(Prefix + "Detalle", Prefix)
        .AddButtons(new List<ButtonToolbar>() {
            new ButtonToolbar{
                Icon = "showpanel",
                Text = "Facturar",
                Action = "SetFacturar"
            }});


}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div id="FacturasGeneracionMainPanelForm">
    <form id="@(Prefix)Form" asp-controller="FacturasGeneracion" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
        @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class", "ErrorValidationSummary"))
        @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
        {
            @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
            @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
            @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
            @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
            @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
            @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

            @(Html.DControls().NumberBoxFor(m => m.Entity.EmpresasId).ID(Prefix + "EmpresasId").Visible(false))

            @(Html.DControls().Form<FacturasGeneracionModel>()
                .ID("FacturasGeneracionModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                .Items(items =>
                {
                    items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONENTTIES"))
                            .Items(groupItems =>
                            {

                                groupItems.AddSimpleFor(m => m.Entity.EntidadesId).ColSpan(6)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.EntidadesId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.EntidadesId")))
                                    .Editor(e => e.SelectBox().ID(Prefix + "EntidadesId")
                                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetEntidadesId").Key("Id"))
                                    .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                    .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                    .SearchEnabled(true).ShowClearButton(true)
                                    .OnValueChanged($"{Prefix}OnValueChangedEntidadesId")
                                );

                                groupItems.AddSimpleFor(m => m.Entity.FilialesId).ColSpan(6)
                                     .Editor(e => e.SelectBox().ID(Prefix + "FilialesId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetFilialesId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10).Filter("['EntidadesId','=','0']"))
                                     .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                 );

                                groupItems.AddSimpleFor(m => m.Entity.ConveniosId).ColSpan(6)
                               .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.ConveniosId")))
                               .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.ConveniosId")))
                                   .Editor(e => e.SelectBox().ID(Prefix + "ConveniosId")
                                   .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetConveniosId").Key("Id"))
                                   .DataSourceOptions(o => o.Paginate(true).PageSize(10).Filter("['EntidadesId','=','0']"))
                                   .ValueExpr("Id").DisplayExpr("CodigoNombre").SearchExpr("Codigo","Nombre")
                                   .SearchEnabled(true).ShowClearButton(true)
                               );
                                groupItems.AddSimpleFor(m => m.Entity.SedesId).ColSpan(6)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.SedesId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.SedesId")))
                                    .Editor(e => e.SelectBox().ID(Prefix + "SedesId")
                                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetSedesId").Key("Id"))
                                    .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                    .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                    .SearchEnabled(true).ShowClearButton(true)
                                    .OnValueChanged($"{Prefix}OnValueChangedSedesId")
                                );

                                groupItems.AddSimpleFor(m => m.Entity.DocumentosId).ColSpan(4)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.DocumentosId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.DocumentosId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "DocumentosId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetDocumentosId").Key("Id")
                                        .LoadParams(new { sedesId = new JS(Prefix + "GetSedesId") })
                                     )
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10).Filter("['Transaccion','=','0']"))
                                     .ValueExpr("Id").DisplayExpr(new JS(Prefix + "DisplayExprDocumentosId")).SearchExpr("Prefijo", "Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );


                                groupItems.AddSimpleFor(m => m.Entity.MediosPagoId).ColSpan(4)
                                    .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.MediosPagoId")))
                                    .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("FacturasGeneracion.MediosPagoId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "MediosPagoId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetMediosPagoId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Descripcion").SearchExpr("Descripcion")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );
                                groupItems.AddSimpleFor(m => m.Entity.TiposRegimenesId).ColSpan(4)
                                     .Editor(e => e.SelectBox().ID(Prefix + "TiposRegimenesId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetTiposRegimenesId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Nombre").SearchExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                                groupItems.AddSimpleFor(m => m.Entity.OrdenCompra).ColSpan(4)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("FacturasGeneracion.OrdenCompra", 50)))
                                     .Editor(e => e.TextBox().ID(Prefix + "OrdenCompra").ShowClearButton(true));
                                
                                groupItems.AddSimpleFor(m => m.Entity.ReferenciaFactura).ColSpan(4)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(50).Message(DApp.GetStringLengthResource("FacturasGeneracion.ReferenciaFactura", 50)))
                                     .Editor(e => e.TextBox().ID(Prefix + "ReferenciaFactura").ShowClearButton(true));

                                groupItems.AddEmpty().ColSpan(4);

                                groupItems.AddSimpleFor(m => m.Entity.Observaciones).ColSpan(12)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(2000).Message(DApp.GetStringLengthResource("FacturasGeneracion.Observaciones", 2000)))
                                     .Editor(e => e.TextArea().ID(Prefix + "Observaciones"));

                                groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                        .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                                     .Editor(e => e.DateBox().ReadOnly(true)
                                     .Type(DateBoxType.DateTime)
                                     .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                                     .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                                     .Editor(e => e.DateBox().ReadOnly(true)
                                     .Type(DateBoxType.DateTime)
                                     .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));
                            });

                    //items.AddGroup().ColCount(3).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONPATIENTS"))
                    //    .Items(groupItems =>
                    //    {

                    //    });

                    items.AddGroup().ColCount(3).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONPeriod"))
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Entity.FechaInicio).ColSpan(1)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.FechaInicio")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaInicio")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));
                                groupItems.AddSimpleFor(m => m.Entity.FechaFinal).ColSpan(1)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("FacturasGeneracion.FechaFinal")))
                                    .Editor(e => e.DateBox().ID(Prefix + "FechaFinal")
                                    .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));
                            });


                })
            )
        }
    </form>

    @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "MAESTRODETALLE" *@

    @if (Model.Process)
    {
        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#MAESTRODETALLE" aria-controls="MAESTRODETALLE" role="tab" data-toggle="tab">
                        @DApp.DefaultLanguage.GetResource("Servicios a Facturar")
                    </a>
                </li>

            </ul>

            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="MAESTRODETALLE">
                    @(Html.DControls().DataGridSimple<ServiciosFacturar>(DataGridDetailConfig)
                .ID("FacturasGeneracionDetalleDataGrid")
                .DataSource(Model.DetalleServiciosFacturar, "Id")
                .FilterRow(x => x.Visible(true))
                .HeaderFilter(headerFilter => headerFilter.Visible(false))

                .Export(e => e.Enabled(false).FileName("file" + DateTime.Now.ToLongDateString()).AllowExportSelectedData(true))
                .SearchPanel(searchPanel => searchPanel
                    .Visible(false)
                    .Width(240)
                    .Placeholder("Buscar")
                )
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Id).Visible(false);
                    columns.AddFor(m => m.EmpresasRazonSocial).Visible(false);
                    columns.AddFor(m => m.EntidadesNombre).Visible(false);
                    columns.AddFor(m => m.SedesNombre).Visible(false);
                    columns.AddFor(m => m.PacienteNumeroIdentificacion);
                    columns.AddFor(m => m.PacientesNombres);
                    columns.AddFor(m => m.FechaAtencion);
                    columns.AddFor(m => m.AdmisionesId);
                    columns.AddFor(m => m.ServiciosCup);
                    columns.AddFor(m => m.ServiciosNombre);
                    columns.AddFor(m => m.Cantidad).Width(100);
                    columns.AddFor(m => m.ValorServicio).Width(150);
                    columns.AddFor(m => m.ValorCopagoCuotaModeradora).Width(150);
                }))
                </div>
            </div>
        </div>
    }
    @if (!Model.Process)
    {
        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#MAESTRODETALLE1" aria-controls="MAESTRODETALLE1" role="tab" data-toggle="tab">
                        @DApp.DefaultLanguage.GetResource("Factura Detalle")
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="MAESTRODETALLE1">
                    @(Html.DControls().DataGridSimple<ServiciosFacturar>()
                    .ID("FacturasGeneracionDetalleDataGrid1")

                    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("FacturasGeneracion").LoadAction("GetServiciosFacturados").Key("Id"))
                    .FilterRow(x => x.Visible(true))
                    .HeaderFilter(headerFilter => headerFilter.Visible(false))
                    .Export(e => e.Enabled(false).FileName("file" + DateTime.Now.ToLongDateString()).AllowExportSelectedData(true))
                    .SearchPanel(searchPanel => searchPanel
                        .Visible(false)
                        .Width(240)
                        .Placeholder("Buscar")
                    )
                    .DataSourceOptions(x => x.Filter("['FacturasGeneracionId','=','" + @Model.Entity.Id + "']")) // Cambiar IdFather por el campo foraneo hacia el padre
                    .Columns(columns =>
                    {
                        columns.AddFor(m => m.EmpresasRazonSocial).Visible(false);
                        columns.AddFor(m => m.EntidadesNombre).Visible(false);
                        columns.AddFor(m => m.SedesNombre).Visible(false);
                        columns.AddFor(m => m.PacienteNumeroIdentificacion);
                        columns.AddFor(m => m.PacientesNombres);
                        columns.AddFor(m => m.FechaAtencion);
                        columns.AddFor(m => m.AdmisionesId);
                        columns.AddFor(m => m.ServiciosCup);
                        columns.AddFor(m => m.ServiciosNombre);
                        columns.AddFor(m => m.Cantidad).Width(100);
                        columns.AddFor(m => m.ValorServicio).Width(150);
                        columns.AddFor(m => m.ValorCopagoCuotaModeradora).Width(150);
                    })
                    )
                </div>

            </div>


        </div>
    }
</div>
