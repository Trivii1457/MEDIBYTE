@model AtencionesResultadoModel
@{
    string Prefix = "AtencionesResultado";

    string UrlSave = Url.Action("Edit", "AtencionesResultado");
    string UrlNew = Url.Action("New", "AtencionesResultado");
    string UrlDelete = Url.Action("Delete", "AtencionesResultado", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "AtencionesResultado");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("AtencionesResultado"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave), Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>()
        {
            new ButtonToolbar
            {
                Action = "ImprimirAtencionesResultadoPorId",
                Text = @DApp.DefaultLanguage.GetResource("DEFAULT.Imprimir"),
                Disabled = (Model.Entity.EstadosId == 66),
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "print"
            }
        })
        //.New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        //.Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete), UrlBack, Model.Entity.IsNew)
        .Back(UrlBack);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="AtencionesResultadoMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="AtencionesResultado" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Visible(false).Type(DateBoxType.DateTime))

                @(Html.DControls().NumberBoxFor(m => m.Entity.AdmisionesServiciosPrestadosId).ID(Prefix + "AdmisionesServiciosPrestadosId").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.EstadosId).ID(Prefix + "EstadosId").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.FechaLectura).ID(Prefix + "FechaLectura").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.EmpleadoId).ID(Prefix + "EmpleadoId").Visible(false))

                //@(Html.DControls().TextBoxFor(m => m.Entity.ResultadoAudio).ID(Prefix + "ResultadoAudio").Visible(false))

                @(Html.DControls().Form<AtencionesResultadoModel>()
                    .ID("AtencionesResultadoModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(1).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>{

                                groupItems.AddSimple().Template(new TemplateName($"{Prefix}TemplateArchivoAudioEscucha"));
                                groupItems.AddSimpleFor(m => m.Entity.AdmisionesServiciosPrestados.Atenciones.NotaProcedimientos).ColSpan(12)
                                    .Editor(e => e.TextArea().ID(Prefix + "NotaProcedimientos").Height(150).ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.Resultado).ColSpan(12)
                                    .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("AtencionesResultado.Resultado")))
                                    .Editor(e => e.TextArea().ID(Prefix + "Resultado").Height(500));
                            });
                    })
                )
            }
        </form>

        @using (Html.DevExtreme().NamedTemplate($"{Prefix}TemplateArchivoAudioEscucha"))
        {
            <div class="row d-flex justify-content-center">
                <div style="background-color: #c7c7c7;height: 50px;">
                    <audio controls id="audioEscucha" src="data:audio/mp3;base64,@(Model.StringToBase64)"></audio>
                </div>
                @*<div>
                    <button type="button" class="btn btn-primary">DESCARGAR</button>
                </div>*@
            </div>
        }

    </div>
</div>

