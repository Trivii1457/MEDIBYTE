@model EmpleadosModel
@{
    string Prefix = "Empleados";

    string UrlSave = Url.Action("Edit", "Empleados");
    string UrlNew = Url.Action("New", "Empleados");
    string UrlDelete = Url.Action("Delete", "Empleados", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "Empleados");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("Empleados"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave), Model.Entity.IsNew)
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete), UrlBack, Model.Entity.IsNew)
        .Back(UrlBack);

    //Configuracion necesaria para la carga de archivos
    Model.Entity.FirmaDigitalArchivo.Maestro = Model.Entity.SelloDigitalArchivo.Maestro = Prefix;
    Model.Entity.FirmaDigitalArchivo.NombreCampoForanea = "FirmaDigitalArchivo";
    Model.Entity.SelloDigitalArchivo.NombreCampoForanea = "SelloDigitalArchivo";

}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="EmpleadosMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="Empleados" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class", "ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.EmpresasId).ID(Prefix + "EmpresasId").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.DV).ID(Prefix + "DV").Visible(false))

                @(Html.DControls().NumberBoxFor(m => m.Entity.FirmaDigitalArchivoId).ID(Prefix + "FirmaDigitalArchivoId").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.SelloDigitalArchivoId).ID(Prefix + "SelloDigitalArchivoId").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.NombreCompleto).ID(Prefix + "NombreCompleto").Visible(false))


                @(Html.DControls().Form<EmpleadosModel>()
                    .ID("EmpleadosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {

                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONADITIONAL"))
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Entity.TiposIdentificacionId).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.TiposIdentificacionId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Personas.TiposIdentificacionId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "TiposIdentificacionId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetTiposIdentificacionId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );
                                groupItems.AddSimpleFor(m => m.Entity.NumeroIdentificacion).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.NumeroIdentificacion")))
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Personas.NumeroIdentificacion", 45)))
                                     .Editor(e => e.TextBox().ID(Prefix + "NumeroIdentificacion").OnValueChanged(Prefix+"calcularDigito")
                                     .ShowClearButton(true));

                                groupItems.AddEmpty().ColSpan(6);

                                groupItems.AddSimpleFor(m => m.Entity.PrimerNombre).ColSpan(3)
                                     .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.PrimerNombre")))
                                     .ValidationRules(rules => rules.AddStringLength().Min(0).Max(150).Message(DApp.GetStringLengthResource("Personas.PrimerNombre", 150)))
                                          .Editor(e => e.TextBox().ID(Prefix + "PrimerNombre").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.SegundoNombre).ColSpan(3)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(150).Message(DApp.GetStringLengthResource("Personas.SegundoNombre", 150)))
                                     .Editor(e => e.TextBox().ID(Prefix + "SegundoNombre").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.PrimerApellido).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.PrimerApellido")))
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(150).Message(DApp.GetStringLengthResource("Personas.PrimerApellido", 150)))
                                     .Editor(e => e.TextBox().ID(Prefix + "PrimerApellido").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.SegundoApellido).ColSpan(3)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(150).Message(DApp.GetStringLengthResource("Personas.SegundoApellido", 150)))
                                     .Editor(e => e.TextBox().ID(Prefix + "SegundoApellido").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.FechaNacimiento).ColSpan(3)
                                     .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.FechaNacimiento")))
                                     .Editor(e => e.DateBox().ID(Prefix + "FechaNacimiento")
                                     .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));
                                groupItems.AddSimpleFor(m => m.Entity.GenerosId).ColSpan(3)
                                .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Personas.GenerosId")))
                                .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Personas.GenerosId")))
                                     .Editor(e => e.SelectBox().ID(Prefix + "GenerosId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetGenerosId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );
                                groupItems.AddSimpleFor(m => m.Entity.EstadosCivilesId).ColSpan(3)
                                     .Editor(e => e.SelectBox().ID(Prefix + "EstadosCivilesId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetEstadosCivilesId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").DisplayExpr("Nombre")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );
                                groupItems.AddSimpleFor(m => m.Entity.TiposSangreId).ColSpan(3)
                                     .Editor(e => e.SelectBox().ID(Prefix + "TiposSangreId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetTiposSangreId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").SearchExpr("Nombre", "RH").DisplayExpr(new JS("DisplayExprTiposSangreId"))
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                            });

                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Entity.TipoEmpleados).ColSpan(6)
                                 .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("Empleados.TipoEmpleados")))
                                 .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("Empleados.TipoEmpleados")))
                                      .Editor(e => e.SelectBox().ID(Prefix + "TipoEmpleados")
                                      .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetTipoEmpleados").Key("Id"))
                                      .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                      .ValueExpr("Id").DisplayExpr("Nombre")
                                      .OnSelectionChanged(Prefix + "OnTipoEmpleadosChanged")
                                      .SearchEnabled(true).ShowClearButton(true));

                                groupItems.AddSimpleFor(m => m.Entity.RegistroMedico).ColSpan(6)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(60).Message(DApp.GetStringLengthResource("Empleados.RegistroMedico", 60)))
                                     .Editor(e => e.TextBox().ID(Prefix + "SSRegistroMedico").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.Telefono).ColSpan(6)
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Empleados.Telefono", 45)))
                                      .Editor(e => e.TextBox().ID(Prefix + "Telefono").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.SegundoTelefono).ColSpan(6)
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(45).Message(DApp.GetStringLengthResource("Empleados.SegundoTelefono", 45)))
                                      .Editor(e => e.TextBox().ID(Prefix + "SegundoTelefono").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.Direccion).ColSpan(6)
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(250).Message(DApp.GetStringLengthResource("Empleados.Direccion", 250)))
                                      .Editor(e => e.TextBox().ID(Prefix + "Direccion").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.SegundaDireccion).ColSpan(6)
                                 .ValidationRules(rules => rules.AddStringLength().Min(0).Max(250).Message(DApp.GetStringLengthResource("Empleados.SegundaDireccion", 250)))
                                      .Editor(e => e.TextBox().ID(Prefix + "SegundaDireccion").ShowClearButton(true));
                                groupItems.AddSimpleFor(m => m.Entity.AutorizaDescuento).Label(x => x.Visible(false)).ColSpan(6)
                                       .Editor(e => e.CheckBox().ID(Prefix + "AutorizaDescuento").Text(DApp.DefaultLanguage.GetResource("Empleados.AutorizaDescuento")));

                                groupItems.AddSimpleFor(m => m.Entity.CreatedBy).ColSpan(3)
                                                .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.CreationDate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UpdatedBy).ColSpan(3)
                                    .Editor(e => e.TextBox().ReadOnly(true));
                                groupItems.AddSimpleFor(m => m.Entity.LastUpdate).ColSpan(3)
                                    .Editor(e => e.DateBox().ReadOnly(true)
                                    .Type(DateBoxType.DateTime)
                                    .DisplayFormat(DApp.DefaultLanguage.DateTimeFormat));

                                groupItems.AddSimpleFor(m => m.Entity.UserId).ColSpan(6)
                                     .Editor(e => e.SelectBox().ID(Prefix + "UserId")
                                     .DataSource(d => d.Mvc().LoadMethod("POST").Controller("Empleados").LoadAction("GetUserId").Key("Id"))
                                     .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                                     .ValueExpr("Id").SearchExpr("UserName", "IdentificationNumber", "Names", "LastNames")
                                     .DisplayExpr("NombreCompleto")
                                     .SearchEnabled(true).ShowClearButton(true)
                                );

                                groupItems.AddSimple().ColSpan(6)
                                    .Template(new TemplateName($"{Model.Entity.FirmaDigitalArchivo.Maestro}{Model.Entity.FirmaDigitalArchivo.NombreCampoForanea}Archivo")
                                 );

                                groupItems.AddSimple().ColSpan(6)
                                    .Template(new TemplateName($"{Model.Entity.SelloDigitalArchivo.Maestro}{Model.Entity.SelloDigitalArchivo.NombreCampoForanea}Archivo")
                                 );

                            });
                    })
                )


            }

        </form>

        @* Si el maestro maneja detalle descomentar el siguiente codigo y remplazar la palabra "VISTADETALLE" y "RECURSODETALLE" *@

        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#EmpleadoProfesiones" aria-controls="EmpleadoProfesiones" role="tab" data-toggle="tab">
                        @DApp.DefaultLanguage.GetResource("EmpleadoProfesiones")
                    </a>
                </li>
                @if (Model.Entity.TipoEmpleados == 2)
                {
                    <li role="presentation">
                        <a href="#ServiciosEmpleados" aria-controls="ServiciosEmpleados" role="tab" data-toggle="tab">
                            @DApp.DefaultLanguage.GetResource("ServiciosEmpleados")
                        </a>
                    </li>
                    <li role="presentation">
                        <a href="#EmpleadosEspecialidades" aria-controls="EmpleadosEspecialidades" role="tab" data-toggle="tab">
                            @DApp.DefaultLanguage.GetResource("EmpleadosEspecialidades")
                        </a>
                    </li>
                }
            </ul>
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="EmpleadoProfesiones">
                    <partial name="../EmpleadoProfesiones/ListDetail.cshtml" model=Model view-data="ViewData" />
                </div>
                @if (Model.Entity.TipoEmpleados == 2)
                {
                    <div role="tabpanel" class="tab-pane" id="ServiciosEmpleados">
                        <partial name="../ServiciosEmpleados/ListDetail.cshtml" model=Model view-data="ViewData" />
                    </div>
                    <div role="tabpanel" class="tab-pane" id="EmpleadosEspecialidades">
                        <partial name="../EmpleadosEspecialidades/ListDetail.cshtml" model=Model view-data="ViewData" />
                    </div>
                }
            </div>
        </div>

    </div>
</div>

<partial name="../Archivos/Archivo.cshtml" model=Model.Entity.FirmaDigitalArchivo view-data="ViewData" />
<partial name="../Archivos/Archivo.cshtml" model=Model.Entity.SelloDigitalArchivo view-data="ViewData" />